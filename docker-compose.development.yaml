x-default-environment: &default-environment
  NODE_ENV: development
  TZ: "UTC"
  DB_HOST: db
  DB_USER: sa
  DB_NAME: elcc_development
  DB_PASS: &default-db-password DevPwd99!
  DB_PORT: &default-db-port 1433
  DB_HEALTH_CHECK_INTERVAL_SECONDS: 5
  DB_HEALTH_CHECK_TIMEOUT_SECONDS: 10
  DB_HEALTH_CHECK_RETRIES: 3
  DB_HEALTH_CHECK_START_PERIOD_SECONDS: 5

services:
  api:
    build:
      context: ./api
      dockerfile: development.Dockerfile
    env_file:
      - ./api/.env.development
    environment:
      <<: *default-environment
      RELEASE_TAG: ${RELEASE_TAG:-development}
      GIT_COMMIT_HASH: ${GIT_COMMIT_HASH:-not-set}
    tty: true # allows attaching debugger, equivalent of docker exec -t
    # stdin_open: true # equivalent of docker exec -i
    ports:
      - "3000:3000"
    volumes:
      - ./api:/usr/src/api
      - ./.gitignore:/usr/src/.gitignore
      - ./.prettierrc.yaml:/usr/src/.prettierrc.yaml
    depends_on:
      - db

  web:
    build:
      context: ./web
      dockerfile: development.Dockerfile
    environment:
      <<: *default-environment
      VITE_API_BASE_URL: "http://localhost:3000"
    ports:
      - "8080:8080"
    volumes:
      - ./web:/usr/src/web
      - ./.gitignore:/usr/src/.gitignore
      - ./.prettierrc.yaml:/usr/src/.prettierrc.yaml
    depends_on:
      - api

  test_api:
    build:
      context: ./api
      dockerfile: development.Dockerfile
    command: /bin/true
    env_file:
      - ./api/.env.development
    environment:
      <<: *default-environment
      NODE_ENV: test
      DB_NAME: elcc_test
      DB_HEALTH_CHECK_START_PERIOD_SECONDS: 0
    tty: true
    volumes:
      - ./api:/usr/src/api
    depends_on:
      - db

  test_web:
    build:
      context: ./web
      dockerfile: development.Dockerfile
    command: /bin/true
    environment:
      <<: *default-environment
      NODE_ENV: test
    tty: true
    volumes:
      - ./web:/usr/src/web

  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    user: root
    environment:
      <<: *default-environment
      DB_HOST: "localhost"
      MSSQL_SA_PASSWORD: *default-db-password
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - db_data:/var/opt/mssql/data

  # For easily generating large PlantUML diagrams
  # Not relevant to production environment.
  # Accessible at http://localhost:9999
  plantuml:
    image: plantuml/plantuml-server:jetty
    ports:
      - 9999:8080
    environment:
      PLANTUML_LIMIT_SIZE: 8192

volumes:
  db_data:
